#!/bin/bash

# Base URL for PokeAPI
POKEAPI_URL="https://pokeapi.co/api/v2/pokemon"

# List of Pokémon to fetch
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output directory
OUTPUT_DIR="pokemon_data"

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Error log file
ERROR_FILE="errors.txt"

# Clear or create error log
> "$ERROR_FILE"

# Loop through each Pokémon
for pokemon in "${POKEMONS[@]}"; do
    echo "Fetching data for $pokemon..."
    
    # Make API request and save to file
    output_file="$OUTPUT_DIR/$pokemon.json"
    curl -s -o "$output_file" "$POKEAPI_URL/$pokemon" 2>> "$ERROR_FILE"
    
    # Check if curl command was successful
    if [ $? -eq 0 ]; then
        # Verify if the output file contains valid JSON
        if jq . "$output_file" > /dev/null 2>> "$ERROR_FILE"; then
            echo "Saved data to $output_file ✅"
        else
            echo "Error: Invalid JSON response for $pokemon" >> "$ERROR_FILE"
            rm -f "$output_file"
        fi
    else
        echo "Error: Failed to retrieve data for $pokemon" >> "$ERROR_FILE"
        rm -f "$output_file"
    fi
    
    # Add a 1-second delay to avoid rate-limiting
    sleep 1
done